
#############################################################
#########freemarker框架 FREEMARKER（FreeMarkerProperties   ##### 
#是否允许HttpServletRequest属性覆盖（隐藏）控制器生成的同名模型属性。
spring.freemarker.allow-request-override=false
#是否允许HttpSession属性覆盖（隐藏）控制器生成的同名模型属性。
spring.freemarker.allow-session-override=false
#是否启用模板缓存。
spring.freemarker.cache=false
#模板编码。 
spring.freemarker.charset=UTF-8
#是否检查模板位置是否存在。
spring.freemarker.check-template-location=true
## Content-Type值。
spring.freemarker.content-type=text/html
#是否为此技术启用MVC视图分辨率。
spring.freemarker.enabled=true
#是否应在与模板合并之前将所有请求属性添加到模型中。
spring.freemarker.expose-request-attributes=false
#是否应在与模板合并之前将所有HttpSession属性添加到模型中。
spring.freemarker.expose-session-attributes=false
#是否公开一个RequestContext供Spring的宏库使用，名称为“springMacroRequestContext”。
spring.freemarker.expose-spring-macro-helpers=true
#是否更喜欢文件系统访问以进行模板加载。文件系统访问可以热检测模板更改。
spring.freemarker.prefer-file-system-access=true
#spring.freemarker.prefix=#在构建URL时添加前缀以查看名称的前缀。
#spring.freemarker.request-context-attribute=#所有视图的RequestContext属性的名称。
#spring.freemarker.settings.*=#众所周知的FreeMarker密钥，传递给FreeMarker的配置。
#在构建URL时附加到视图名称的后缀。
spring.freemarker.suffix=.ftl
#逗号分隔的模板路径列表。
spring.freemarker.template-loader-path=classpath:/templates/
#spring.freemarker.view-names=#可以解析的视图名称的白名单。


###############################################
############# JDBC配置   ##########################
# mysql
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/oa?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=默认加载可以不用写


###########################################################################
############## druid 连接池配置 DataSourceProperties  ##########################
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=1
spring.datasource.druid.min-idle=1
spring.datasource.druid.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
#最大可回收空闲时间
spring.datasource.druid.max-evictable-idle-time-millis=300000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=180000
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
#每个连接大小的最大池准备语句
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall
#指定连接校验查询的超时时间
spring.datasource.druid.validation-query-timeout=60000

